plugins {
    id 'com.android.library'
}
//用的是kotlin的库所以要加上
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//ARoute配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion 30

//    signingConfigs {
//        release {
//            storeFile file("$System.env.KEYSTORE_PATH")
//            storePassword "$System.env.STOREPASS"
//            keyAlias "$System.env.ALIAS"
//            keyPassword "$System.env.KEYPASS"
//        }
//    }

    defaultConfig {
        minSdk 22
        targetSdk 26
        archivesBaseName = "TUIKitDemo"
        multiDexEnabled = true
//        applicationId "com.tencent.qcloud.tim.tuikit"

        ndk {
            abiFilters  "armeabi-v7a", "arm64-v8a","armeabi"
        }
    }

    buildTypes {

        release_user {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        develop_user {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        alpha_user {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release_expert {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        develop_expert {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        alpha_expert {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs project(':L-Base').file('libs')
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    kapt project(path: ':L-Compiler')
    api project(':L-Base')
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    implementation fileTree(include: ['*.jar','*.aar'], dir: '../libs')

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support:design:28.0.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    // Optional, if you use support library fragments:

    // google firebase
    implementation('com.google.firebase:firebase-core:17.0.0')
    // google 云消息传递
    implementation ('com.google.firebase:firebase-messaging:19.0.1')
    // tpns推送
    // 小米
    implementation "com.tencent.tpns:xiaomi:1.2.1.2-release"
    // 魅族
    implementation "com.tencent.tpns:meizu:1.2.1.2-release"
    // OPPO
    implementation "com.tencent.tpns:oppo:1.2.1.2-release"
    // vivo
    implementation "com.tencent.tpns:vivo:1.2.1.2-release"
    // 华为
    implementation 'com.tencent.tpns:huawei:1.2.1.3-release'
    implementation 'com.huawei.hms:push:5.0.2.300'


    // bugly sdk
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    implementation 'com.github.bumptech.glide:glide:4.12.0'

    api project(':L-IM-Conversation')
    api project(':L-IM-Contact')
    api project(':L-IM-Chat')
//    api project(':tuisearch')
    api project(':L-IM-Group')
    api project(':L-IM-Calling')
    api project(':L-IM-Core')
}
